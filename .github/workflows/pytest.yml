# This is a basic workflow to help you get started with Actions

name: Test Python application

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['2.7', '3.7', '3.8', '3.9', '3.10', 'pypy-2.7', 'pypy-3.8']
        exclude:
          - os: macos-latest
            python-version: '3.8'
          - os: windows-latest
            python-version: '3.6'
    name: Python ${{ matrix.python-version }} example
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python --version

      # Checks for existing Pipfile.lock
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "Pipfile.lock"

      # Runs a single command using the runners shell
      - name: Install Python, pipenv and Pipfile packages
        if: steps.check_files.outputs.files_exists == 'true'
        uses: palewire/install-python-pipenv-pipfile@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Runs a set of commands using the runners shell
      - name: Pipfile File exists
        if: steps.check_files.outputs.files_exists == 'true'
        # Only runs if all of the files exists
        run: |
          # pipenv install --dev
          # assume that pytest is listed under the [dev-packages]
          pipenv run pytest
